Detailgrad = 24; 
$fn=Detailgrad; 
holewithorigin=false; 
EnableVias=true; 
EnableParts=true; 
EnableWires=true;   // Disable for smaler export file
EnablePolygones=true;  // Disable for smaler export file
HideAutogeneratedParts=true;  // Disable yellow boxes
EnableSoldermask=false;  // Disable for smaler export file

module ESPLEDCTRL(){
	board_thickness = 1.600;
	eta = 0.2;
	board_size = [70.168,30.163];
	board_origin = [0,0];
	board_polygons = [[[-5.080,-4.763],[65.088,-4.763],[65.088,25.400],[-5.080,25.400]]];
	translate([0,0,0]) union()   // PCB whith parts and text
	{
		color("#265004")linear_extrude(height=board_thickness,center=false, convexity=10)
		union()  // PCB 
		{
			difference() // PCB and holes 
			{
				translate(board_origin)  polygon(points = board_polygons[0]); //Board
				if (Detailgrad > 9) // Drill part holes 
				{
					translate([7.429,2.540])circle(r=1.500,$fn=$fn); //hole
					translate([37.148,17.780])circle(r=1.500,$fn=$fn); //hole
					translate([16.192,-2.223])circle(r=0.550,$fn=$fn); //DO41-7.6 A
					translate([8.572,-2.223])circle(r=0.550,$fn=$fn); //DO41-7.6 C
					translate([-1.270,16.828])circle(r=0.500,$fn=$fn); //TSOP38 1
					translate([-1.270,14.288])circle(r=0.500,$fn=$fn); //TSOP38 2
					translate([-1.270,11.748])circle(r=0.500,$fn=$fn); //TSOP38 3
					translate([36.195,-1.270])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP1.1
					translate([38.735,-1.270])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP1.2
					translate([41.275,-1.270])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP1.3
					translate([43.815,-1.270])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP1.4
					translate([46.355,-1.270])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP1.5
					translate([48.895,-1.270])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP1.6
					translate([51.435,-1.270])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP1.7
					translate([53.975,-1.270])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP1.8
					translate([36.195,21.590])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP2.1
					translate([38.735,21.590])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP2.2
					translate([41.275,21.590])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP2.3
					translate([43.815,21.590])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP2.4
					translate([46.355,21.590])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP2.5
					translate([48.895,21.590])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP2.6
					translate([51.435,21.590])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP2.7
					translate([53.975,21.590])circle(r=0.500,$fn=$fn); //WEMOS-D1-MINI JP2.8
					translate([2.095,1.524])circle(r=0.750,$fn=$fn); //DC-DC-STEP-DOWN-LM2596 IN+
					translate([2.095,18.796])circle(r=0.750,$fn=$fn); //DC-DC-STEP-DOWN-LM2596 IN-
					translate([41.720,1.524])circle(r=0.750,$fn=$fn); //DC-DC-STEP-DOWN-LM2596 OUT+
					translate([41.720,18.796])circle(r=0.750,$fn=$fn); //DC-DC-STEP-DOWN-LM2596 OUT-
					if (EnableVias && (Detailgrad > 12)) 
 					union() // Vias 
					{
						translate([31.433,-2.223])circle(r=0.175,$fn=$fn); //via
						translate([13.970,3.175])circle(r=0.300,$fn=$fn); //via
						translate([17.780,3.493])circle(r=0.300,$fn=$fn); //via
						translate([55.880,22.225])circle(r=0.300,$fn=$fn); //via
						translate([4.763,14.605])circle(r=0.300,$fn=$fn); //via
						translate([4.763,16.192])circle(r=0.300,$fn=$fn); //via
						translate([26.035,13.970])circle(r=0.300,$fn=$fn); //via
						translate([22.860,13.970])circle(r=0.300,$fn=$fn); //via
						translate([13.018,10.795])circle(r=0.300,$fn=$fn); //via
						translate([16.828,9.843])circle(r=0.300,$fn=$fn); //via
						translate([-1.588,-1.588])circle(r=0.300,$fn=$fn); //via
						translate([-1.270,8.890])circle(r=0.300,$fn=$fn); //via
						translate([-1.270,4.128])circle(r=0.300,$fn=$fn); //via
						translate([13.970,20.320])circle(r=0.300,$fn=$fn); //via
						translate([32.068,20.637])circle(r=0.300,$fn=$fn); //via
						translate([47.308,13.652])circle(r=0.300,$fn=$fn); //via
					} // End Vias
				} // end Drill part holes
			} //end difference() PCB and holes 
			if (holewithorigin) 
			{
				//Print a little cross in the PCB holes 
			}
		} //end union() // PCB 
		if (Detailgrad > 10) color("#DFDDE0",1) translate([0,0,board_thickness-0.017]) linear_extrude(height=0.040,center=false, convexity=10) difference()  { 
	  union() { 
					translate([2.540,12.253]) rotate([0,0,90.000]) square([1.600,1.800], center = true); //C1206 1
			translate([2.540,15.053]) rotate([0,0,90.000]) square([1.600,1.800], center = true); //C1206 2
			translate([18.733,13.465]) rotate([0,0,270.000]) square([1.600,1.800], center = true); //C1206 1
			translate([18.733,10.665]) rotate([0,0,270.000]) square([1.600,1.800], center = true); //C1206 2
			translate([24.448,8.713]) rotate([0,0,270.000]) square([3.000,1.400], center = true); //PANASONIC_D +
			translate([24.448,13.513]) rotate([0,0,270.000]) square([3.000,1.400], center = true); //PANASONIC_D -
			translate([16.192,-2.223]) circle(r=0.850,$fn=$fn);
			translate([8.572,-2.223]) circle(r=0.850,$fn=$fn);
			translate([14.758,12.715]) rotate([0,0,270.000]) square([0.400,0.900], center = true); //SOT353 1
			translate([14.758,12.065]) rotate([0,0,270.000]) square([0.400,0.900], center = true); //SOT353 2
			translate([14.758,11.415]) rotate([0,0,270.000]) square([0.400,0.900], center = true); //SOT353 3
			translate([16.358,11.415]) rotate([0,0,270.000]) square([0.400,0.900], center = true); //SOT353 4
			translate([16.358,12.715]) rotate([0,0,270.000]) square([0.400,0.900], center = true); //SOT353 5
			translate([-1.270,16.828]) circle(r=0.754,$fn=$fn);
			translate([-1.270,14.288]) circle(r=0.754,$fn=$fn);
			translate([-1.270,11.748]) circle(r=0.754,$fn=$fn);
			translate([24.384,17.463]) rotate([0,0,180.000]) square([1.168,1.600], center = true); //SJ_2 1
			translate([22.860,17.463]) rotate([0,0,180.000]) square([1.168,1.600], center = true); //SJ_2 2
			translate([21.336,17.463]) rotate([0,0,180.000]) square([1.168,1.600], center = true); //SJ_2 3
			translate([36.195,-1.270]) circle(r=0.754,$fn=$fn);
			translate([38.735,-1.270]) circle(r=0.754,$fn=$fn);
			translate([41.275,-1.270]) circle(r=0.754,$fn=$fn);
			translate([43.815,-1.270]) circle(r=0.754,$fn=$fn);
			translate([46.355,-1.270]) circle(r=0.754,$fn=$fn);
			translate([48.895,-1.270]) circle(r=0.754,$fn=$fn);
			translate([51.435,-1.270]) circle(r=0.754,$fn=$fn);
			translate([53.975,-1.270]) circle(r=0.754,$fn=$fn);
			translate([36.195,21.590]) circle(r=0.754,$fn=$fn);
			translate([38.735,21.590]) circle(r=0.754,$fn=$fn);
			translate([41.275,21.590]) circle(r=0.754,$fn=$fn);
			translate([43.815,21.590]) circle(r=0.754,$fn=$fn);
			translate([46.355,21.590]) circle(r=0.754,$fn=$fn);
			translate([48.895,21.590]) circle(r=0.754,$fn=$fn);
			translate([51.435,21.590]) circle(r=0.754,$fn=$fn);
			translate([53.975,21.590]) circle(r=0.754,$fn=$fn);
			translate([2.095,1.524]) rotate([0,0,0.000]) square(2.500, center = true, $fn=$fn);
			translate([2.095,18.796]) rotate([0,0,0.000]) square(2.500, center = true, $fn=$fn);
			translate([41.720,1.524]) rotate([0,0,0.000]) square(2.500, center = true, $fn=$fn);
			translate([41.720,18.796]) rotate([0,0,0.000]) square(2.500, center = true, $fn=$fn);
			translate([10.478,16.192]) rotate([0,0,180.000]) square([2.000,4.000], center = true); //PAD2X4 P$1
			translate([7.620,16.192]) rotate([0,0,180.000]) square([2.000,4.000], center = true); //PAD2X4 P$1
		}
			translate([16.192,-2.223]) circle(r=0.550,$fn=$fn);
			translate([8.572,-2.223]) circle(r=0.550,$fn=$fn);
			translate([-1.270,16.828]) circle(r=0.500,$fn=$fn);
			translate([-1.270,14.288]) circle(r=0.500,$fn=$fn);
			translate([-1.270,11.748]) circle(r=0.500,$fn=$fn);
			translate([36.195,-1.270]) circle(r=0.500,$fn=$fn);
			translate([38.735,-1.270]) circle(r=0.500,$fn=$fn);
			translate([41.275,-1.270]) circle(r=0.500,$fn=$fn);
			translate([43.815,-1.270]) circle(r=0.500,$fn=$fn);
			translate([46.355,-1.270]) circle(r=0.500,$fn=$fn);
			translate([48.895,-1.270]) circle(r=0.500,$fn=$fn);
			translate([51.435,-1.270]) circle(r=0.500,$fn=$fn);
			translate([53.975,-1.270]) circle(r=0.500,$fn=$fn);
			translate([36.195,21.590]) circle(r=0.500,$fn=$fn);
			translate([38.735,21.590]) circle(r=0.500,$fn=$fn);
			translate([41.275,21.590]) circle(r=0.500,$fn=$fn);
			translate([43.815,21.590]) circle(r=0.500,$fn=$fn);
			translate([46.355,21.590]) circle(r=0.500,$fn=$fn);
			translate([48.895,21.590]) circle(r=0.500,$fn=$fn);
			translate([51.435,21.590]) circle(r=0.500,$fn=$fn);
			translate([53.975,21.590]) circle(r=0.500,$fn=$fn);
			translate([2.095,1.524]) circle(r=0.750,$fn=$fn);
			translate([2.095,18.796]) circle(r=0.750,$fn=$fn);
			translate([41.720,1.524]) circle(r=0.750,$fn=$fn);
			translate([41.720,18.796]) circle(r=0.750,$fn=$fn);

		}
		if (EnableWires && (Detailgrad > 12)) color("#7C770F",1) translate([0,0,board_thickness-0.017]) linear_extrude(height=0.035,center=false, convexity=10) difference()  { 
	  union() { 
				EagleWire([16.192,-2.223],[31.433,-2.223],startdot=1,enddot=1,width=0.610,$fn=9);
		EagleWire([41.720,1.524],[39.434,3.810],startdot=1,enddot=1,width=1.550,$fn=9);
		EagleWire([39.434,3.810],[25.082,3.810],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([25.082,3.810],[24.448,4.445],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([24.448,4.445],[24.448,8.713],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([24.448,8.713],[25.260,9.525],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([49.848,9.525],[53.975,13.652],startdot=1,enddot=1,width=1.550,$fn=9);
		EagleWire([53.975,13.652],[53.975,21.590],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([25.260,9.525],[49.848,9.525],startdot=0,enddot=0,width=1.550,$fn=9);
		EagleWire([16.358,12.715],[18.430,12.715],startdot=1,enddot=1,width=0.305,$fn=9);
		EagleWire([18.430,12.715],[18.733,13.018],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([18.733,13.018],[18.733,13.465],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([-1.270,11.748],[0.953,11.748],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([0.953,11.748],[1.270,11.430],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([1.270,11.430],[1.718,11.430],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([1.718,11.430],[2.540,12.253],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([24.448,8.713],[24.270,10.160],startdot=0,enddot=1,width=0.610,$fn=9);
		EagleWire([24.270,10.160],[22.543,10.160],startdot=0,enddot=1,width=0.610,$fn=9);
		EagleWire([22.543,10.160],[20.955,11.748],startdot=0,enddot=1,width=0.610,$fn=9);
		EagleWire([20.955,11.748],[20.955,12.065],startdot=0,enddot=1,width=0.610,$fn=9);
		EagleWire([20.955,12.065],[20.003,13.018],startdot=0,enddot=1,width=0.610,$fn=9);
		EagleWire([20.003,13.018],[18.733,13.018],startdot=0,enddot=0,width=0.610,$fn=9);
		EagleWire([2.540,12.253],[4.893,12.253],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([4.893,12.253],[13.970,3.175],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([17.780,3.493],[22.543,3.493],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([22.543,3.493],[22.543,10.160],startdot=0,enddot=0,width=0.406,$fn=9);
		EagleWire([2.095,1.524],[-3.111,1.524],startdot=1,enddot=1,width=1.550,$fn=9);
		EagleWire([-3.111,1.524],[-3.175,1.588],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([-3.175,1.588],[-3.175,23.215],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([-3.175,23.215],[-2.857,23.533],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([-2.857,23.533],[54.890,23.533],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([54.890,23.533],[55.880,22.543],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([55.880,22.543],[55.880,22.225],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([-1.270,14.288],[0.318,14.288],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([0.318,14.288],[1.270,15.240],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([1.270,15.240],[2.353,15.240],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([2.353,15.240],[2.540,15.053],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([2.540,15.053],[4.315,15.053],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([4.315,15.053],[4.763,14.605],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([7.620,16.192],[4.763,16.192],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([24.448,13.513],[25.578,13.513],startdot=1,enddot=1,width=0.610,$fn=9);
		EagleWire([25.578,13.513],[26.035,13.970],startdot=0,enddot=1,width=0.610,$fn=9);
		EagleWire([24.448,13.513],[23.318,13.513],startdot=0,enddot=1,width=0.610,$fn=9);
		EagleWire([23.318,13.513],[22.860,13.970],startdot=0,enddot=1,width=0.610,$fn=9);
		EagleWire([14.758,11.415],[13.638,11.415],startdot=1,enddot=1,width=0.305,$fn=9);
		EagleWire([13.638,11.415],[13.018,10.795],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([18.733,10.665],[17.650,10.665],startdot=1,enddot=1,width=0.610,$fn=9);
		EagleWire([17.650,10.665],[16.828,9.843],startdot=0,enddot=1,width=0.610,$fn=9);
		EagleWire([46.355,21.590],[46.355,16.192],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([46.355,16.192],[44.133,13.970],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([44.133,13.970],[33.655,13.970],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([33.655,13.970],[26.511,21.114],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([18.574,21.114],[26.511,21.114],startdot=1,enddot=0,width=0.406,$fn=9);
		EagleWire([10.478,16.192],[10.795,16.510],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([10.795,16.510],[13.970,16.510],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([13.970,16.510],[18.574,21.114],startdot=0,enddot=0,width=0.406,$fn=9);
		EagleWire([43.815,21.590],[45.085,20.320],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([45.085,20.320],[45.085,16.510],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([45.085,16.510],[43.498,14.923],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([43.498,14.923],[34.326,14.923],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([34.326,14.923],[32.720,16.492],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([32.720,16.492],[27.305,21.908],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([-1.270,21.908],[-1.270,16.828],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([27.305,21.908],[-1.270,21.908],startdot=0,enddot=0,width=0.406,$fn=9);
		EagleWire([48.895,21.590],[47.625,20.320],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([47.625,20.320],[47.625,16.192],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([47.625,16.192],[44.450,13.018],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([32.703,13.018],[28.893,16.828],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([28.893,16.828],[24.765,16.828],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([24.765,16.828],[24.384,17.463],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([44.450,13.018],[32.703,13.018],startdot=0,enddot=0,width=0.406,$fn=9);
		EagleWire([14.758,12.065],[13.652,12.065],startdot=1,enddot=1,width=0.305,$fn=9);
		EagleWire([13.652,12.065],[13.335,12.383],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([13.335,12.383],[13.335,12.700],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([13.335,12.700],[14.743,12.700],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([14.743,12.700],[14.758,12.715],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([13.335,12.700],[13.335,13.335],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([13.335,13.335],[15.875,15.875],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([22.225,15.875],[22.860,16.510],startdot=1,enddot=1,width=0.305,$fn=9);
		EagleWire([22.860,16.510],[22.860,17.463],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([15.875,15.875],[22.225,15.875],startdot=0,enddot=0,width=0.305,$fn=9);
		EagleWire([37.148,2.223],[40.640,-1.270],startdot=1,enddot=1,width=0.305,$fn=9);
		EagleWire([40.640,-1.270],[41.275,-1.270],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([16.828,2.223],[11.748,7.303],startdot=1,enddot=1,width=0.305,$fn=9);
		EagleWire([16.828,2.223],[37.148,2.223],startdot=0,enddot=0,width=0.305,$fn=9);
		EagleWire([11.748,7.303],[11.748,12.700],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([11.748,12.700],[15.875,16.828],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([15.875,16.828],[19.367,16.828],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([19.367,16.828],[20.701,16.828],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([20.701,16.828],[21.336,17.463],startdot=0,enddot=1,width=0.305,$fn=9);
		EagleWire([16.358,11.415],[15.558,12.215],startdot=1,enddot=1,width=0.254,$fn=9);
		EagleWire([15.558,14.288],[16.510,15.240],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([28.258,15.875],[32.068,12.065],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([32.068,12.065],[45.403,12.065],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([45.403,12.065],[46.990,13.652],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([46.990,13.652],[47.308,13.652],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([15.558,12.215],[15.558,14.288],startdot=0,enddot=0,width=0.254,$fn=9);
		EagleWire([16.510,15.240],[22.860,15.240],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([22.860,15.240],[23.495,15.875],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([23.495,15.875],[28.258,15.875],startdot=0,enddot=0,width=0.406,$fn=9);
			translate([31.433,-2.223]) circle(r=0.378,$fn=$fn);
			translate([13.970,3.175]) circle(r=0.503,$fn=$fn);
			translate([17.780,3.493]) circle(r=0.503,$fn=$fn);
			translate([55.880,22.225]) circle(r=0.503,$fn=$fn);
			translate([4.763,14.605]) circle(r=0.503,$fn=$fn);
			translate([4.763,16.192]) circle(r=0.503,$fn=$fn);
			translate([26.035,13.970]) circle(r=0.503,$fn=$fn);
			translate([22.860,13.970]) circle(r=0.503,$fn=$fn);
			translate([13.018,10.795]) circle(r=0.503,$fn=$fn);
			translate([16.828,9.843]) circle(r=0.503,$fn=$fn);
			translate([-1.588,-1.588]) circle(r=0.503,$fn=$fn);
			translate([-1.270,8.890]) circle(r=0.503,$fn=$fn);
			translate([-1.270,4.128]) circle(r=0.503,$fn=$fn);
			translate([13.970,20.320]) circle(r=0.503,$fn=$fn);
			translate([32.068,20.637]) circle(r=0.503,$fn=$fn);
			translate([47.308,13.652]) circle(r=0.503,$fn=$fn);
		}
					if (EnableVias && (Detailgrad > 12)) 
 					union() // Vias 
					{
				translate([31.433,-2.223]) circle(r=0.175,$fn=$fn);
				translate([13.970,3.175]) circle(r=0.300,$fn=$fn);
				translate([17.780,3.493]) circle(r=0.300,$fn=$fn);
				translate([55.880,22.225]) circle(r=0.300,$fn=$fn);
				translate([4.763,14.605]) circle(r=0.300,$fn=$fn);
				translate([4.763,16.192]) circle(r=0.300,$fn=$fn);
				translate([26.035,13.970]) circle(r=0.300,$fn=$fn);
				translate([22.860,13.970]) circle(r=0.300,$fn=$fn);
				translate([13.018,10.795]) circle(r=0.300,$fn=$fn);
				translate([16.828,9.843]) circle(r=0.300,$fn=$fn);
				translate([-1.588,-1.588]) circle(r=0.300,$fn=$fn);
				translate([-1.270,8.890]) circle(r=0.300,$fn=$fn);
				translate([-1.270,4.128]) circle(r=0.300,$fn=$fn);
				translate([13.970,20.320]) circle(r=0.300,$fn=$fn);
				translate([32.068,20.637]) circle(r=0.300,$fn=$fn);
				translate([47.308,13.652]) circle(r=0.300,$fn=$fn);
		}

		}
			if (EnablePolygones) {
			}
		if (Detailgrad > 10) color("#DFDDE0",1) translate([0,0,-0.022]) linear_extrude(height=0.040,center=false, convexity=10) difference()  { 
	  union() { 
					translate([16.192,-2.223]) circle(r=0.850,$fn=$fn);
			translate([8.572,-2.223]) circle(r=0.850,$fn=$fn);
			translate([-1.270,16.828]) circle(r=0.754,$fn=$fn);
			translate([-1.270,14.288]) circle(r=0.754,$fn=$fn);
			translate([-1.270,11.748]) circle(r=0.754,$fn=$fn);
			translate([23.559,-2.223]) square([1.168,1.600], center = true); //SJ_2 1
			translate([25.082,-2.223]) square([1.168,1.600], center = true); //SJ_2 2
			translate([26.607,-2.223]) square([1.168,1.600], center = true); //SJ_2 3
			translate([36.195,-1.270]) circle(r=0.754,$fn=$fn);
			translate([38.735,-1.270]) circle(r=0.754,$fn=$fn);
			translate([41.275,-1.270]) circle(r=0.754,$fn=$fn);
			translate([43.815,-1.270]) circle(r=0.754,$fn=$fn);
			translate([46.355,-1.270]) circle(r=0.754,$fn=$fn);
			translate([48.895,-1.270]) circle(r=0.754,$fn=$fn);
			translate([51.435,-1.270]) circle(r=0.754,$fn=$fn);
			translate([53.975,-1.270]) circle(r=0.754,$fn=$fn);
			translate([36.195,21.590]) circle(r=0.754,$fn=$fn);
			translate([38.735,21.590]) circle(r=0.754,$fn=$fn);
			translate([41.275,21.590]) circle(r=0.754,$fn=$fn);
			translate([43.815,21.590]) circle(r=0.754,$fn=$fn);
			translate([46.355,21.590]) circle(r=0.754,$fn=$fn);
			translate([48.895,21.590]) circle(r=0.754,$fn=$fn);
			translate([51.435,21.590]) circle(r=0.754,$fn=$fn);
			translate([53.975,21.590]) circle(r=0.754,$fn=$fn);
			translate([2.095,1.524]) rotate([0,0,0.000]) square(2.500, center = true, $fn=$fn);
			translate([2.095,18.796]) rotate([0,0,0.000]) square(2.500, center = true, $fn=$fn);
			translate([41.720,1.524]) rotate([0,0,0.000]) square(2.500, center = true, $fn=$fn);
			translate([41.720,18.796]) rotate([0,0,0.000]) square(2.500, center = true, $fn=$fn);
			translate([51.117,10.795]) rotate([0,0,90.000]) square([2.000,4.000], center = true); //PAD2X4 P$1
			translate([51.117,13.652]) rotate([0,0,90.000]) square([2.000,4.000], center = true); //PAD2X4 P$1
			translate([51.117,16.510]) rotate([0,0,90.000]) square([2.000,4.000], center = true); //PAD2X4 P$1
			translate([59.055,10.795]) rotate([0,0,90.000]) square([2.000,4.000], center = true); //PAD2X4 P$1
			translate([59.055,16.510]) rotate([0,0,90.000]) square([2.000,4.000], center = true); //PAD2X4 P$1
			translate([59.055,23.178]) rotate([0,0,90.000]) square([2.000,4.000], center = true); //PAD2X4 P$1
			translate([59.055,19.685]) rotate([0,0,90.000]) square([2.000,4.000], center = true); //PAD2X4 P$1
		}
			translate([16.192,-2.223]) circle(r=0.550,$fn=$fn);
			translate([8.572,-2.223]) circle(r=0.550,$fn=$fn);
			translate([-1.270,16.828]) circle(r=0.500,$fn=$fn);
			translate([-1.270,14.288]) circle(r=0.500,$fn=$fn);
			translate([-1.270,11.748]) circle(r=0.500,$fn=$fn);
			translate([36.195,-1.270]) circle(r=0.500,$fn=$fn);
			translate([38.735,-1.270]) circle(r=0.500,$fn=$fn);
			translate([41.275,-1.270]) circle(r=0.500,$fn=$fn);
			translate([43.815,-1.270]) circle(r=0.500,$fn=$fn);
			translate([46.355,-1.270]) circle(r=0.500,$fn=$fn);
			translate([48.895,-1.270]) circle(r=0.500,$fn=$fn);
			translate([51.435,-1.270]) circle(r=0.500,$fn=$fn);
			translate([53.975,-1.270]) circle(r=0.500,$fn=$fn);
			translate([36.195,21.590]) circle(r=0.500,$fn=$fn);
			translate([38.735,21.590]) circle(r=0.500,$fn=$fn);
			translate([41.275,21.590]) circle(r=0.500,$fn=$fn);
			translate([43.815,21.590]) circle(r=0.500,$fn=$fn);
			translate([46.355,21.590]) circle(r=0.500,$fn=$fn);
			translate([48.895,21.590]) circle(r=0.500,$fn=$fn);
			translate([51.435,21.590]) circle(r=0.500,$fn=$fn);
			translate([53.975,21.590]) circle(r=0.500,$fn=$fn);
			translate([2.095,1.524]) circle(r=0.750,$fn=$fn);
			translate([2.095,18.796]) circle(r=0.750,$fn=$fn);
			translate([41.720,1.524]) circle(r=0.750,$fn=$fn);
			translate([41.720,18.796]) circle(r=0.750,$fn=$fn);

		}
		if (EnableWires && (Detailgrad > 12)) color("#7C770F",1) translate([0,0,-0.017]) linear_extrude(height=0.035,center=false, convexity=10) difference()  { 
	  union() { 
				EagleWire([35.179,1.524],[41.720,1.524],startdot=1,enddot=1,width=2.540,$fn=9);
		EagleWire([26.607,-2.223],[27.623,-2.223],startdot=1,enddot=1,width=0.813,$fn=9);
		EagleWire([27.623,-2.223],[31.433,-2.223],startdot=0,enddot=1,width=2.540,$fn=9);
		EagleWire([31.433,-2.223],[35.179,1.524],startdot=0,enddot=0,width=2.540,$fn=9);
		EagleWire([13.970,3.175],[17.463,3.175],startdot=1,enddot=1,width=0.406,$fn=9);
		EagleWire([17.463,3.175],[17.780,3.493],startdot=0,enddot=1,width=0.406,$fn=9);
		EagleWire([59.055,23.178],[57.747,23.533],startdot=1,enddot=1,width=1.550,$fn=9);
		EagleWire([57.747,23.533],[-2.857,23.533],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([-2.857,23.533],[-3.213,23.178],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([-3.213,23.178],[-3.213,1.588],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([-3.213,1.588],[2.032,1.588],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([2.032,1.588],[2.095,1.524],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([2.032,1.461],[2.223,1.270],startdot=1,enddot=1,width=1.550,$fn=9);
		EagleWire([2.032,1.461],[2.032,1.588],startdot=0,enddot=0,width=1.550,$fn=9);
		EagleWire([2.095,1.524],[5.842,-2.223],startdot=0,enddot=1,width=2.540,$fn=9);
		EagleWire([5.842,-2.223],[8.572,-2.223],startdot=0,enddot=1,width=2.540,$fn=9);
		EagleWire([8.572,-2.223],[12.383,-2.223],startdot=0,enddot=1,width=2.540,$fn=9);
		EagleWire([12.383,-2.223],[15.240,0.635],startdot=0,enddot=1,width=2.540,$fn=9);
		EagleWire([17.145,0.635],[20.003,-2.223],startdot=1,enddot=1,width=2.540,$fn=9);
		EagleWire([20.003,-2.223],[22.543,-2.223],startdot=0,enddot=1,width=2.540,$fn=9);
		EagleWire([22.543,-2.223],[23.559,-2.223],startdot=0,enddot=1,width=0.813,$fn=9);
		EagleWire([15.240,0.635],[17.145,0.635],startdot=0,enddot=0,width=2.540,$fn=9);
		EagleWire([55.880,22.225],[58.103,22.225],startdot=1,enddot=1,width=1.550,$fn=9);
		EagleWire([58.103,22.225],[59.055,23.178],startdot=0,enddot=0,width=1.550,$fn=9);
		EagleWire([59.055,19.685],[55.880,19.685],startdot=1,enddot=1,width=1.550,$fn=9);
		EagleWire([55.880,19.685],[55.245,19.050],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([55.245,19.050],[51.435,19.050],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([51.435,19.050],[41.974,19.050],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([41.974,19.050],[41.720,18.796],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([41.720,18.796],[40.439,17.515],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([40.439,17.515],[40.439,16.417],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([40.439,16.417],[38.511,14.489],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([31.477,18.796],[2.095,18.796],startdot=1,enddot=1,width=1.550,$fn=9);
		EagleWire([35.784,14.489],[31.477,18.796],startdot=1,enddot=0,width=1.550,$fn=9);
		EagleWire([38.511,14.489],[35.784,14.489],startdot=0,enddot=0,width=1.550,$fn=9);
		EagleWire([51.435,21.590],[51.435,19.050],startdot=1,enddot=0,width=1.550,$fn=9);
		EagleWire([59.055,16.510],[51.117,16.510],startdot=1,enddot=1,width=1.550,$fn=9);
		EagleWire([51.117,16.510],[51.117,18.733],startdot=0,enddot=1,width=1.550,$fn=9);
		EagleWire([51.117,18.733],[51.435,19.050],startdot=0,enddot=0,width=1.550,$fn=9);
		EagleWire([47.308,13.652],[51.117,13.652],startdot=1,enddot=1,width=0.610,$fn=9);
		EagleWire([59.055,10.795],[51.117,10.795],startdot=1,enddot=1,width=2.540,$fn=9);
		EagleWire([51.117,10.795],[33.973,10.795],startdot=0,enddot=1,width=2.540,$fn=9);
		EagleWire([25.082,0.000],[25.082,1.905],startdot=1,enddot=1,width=2.540,$fn=9);
		EagleWire([25.082,1.905],[33.973,10.795],startdot=0,enddot=0,width=2.540,$fn=9);
		EagleWire([25.082,-2.223],[25.082,0.000],startdot=1,enddot=0,width=1.270,$fn=9);
			translate([31.433,-2.223]) circle(r=0.378,$fn=$fn);
			translate([13.970,3.175]) circle(r=0.503,$fn=$fn);
			translate([17.780,3.493]) circle(r=0.503,$fn=$fn);
			translate([55.880,22.225]) circle(r=0.503,$fn=$fn);
			translate([4.763,14.605]) circle(r=0.503,$fn=$fn);
			translate([4.763,16.192]) circle(r=0.503,$fn=$fn);
			translate([26.035,13.970]) circle(r=0.503,$fn=$fn);
			translate([22.860,13.970]) circle(r=0.503,$fn=$fn);
			translate([13.018,10.795]) circle(r=0.503,$fn=$fn);
			translate([16.828,9.843]) circle(r=0.503,$fn=$fn);
			translate([-1.588,-1.588]) circle(r=0.503,$fn=$fn);
			translate([-1.270,8.890]) circle(r=0.503,$fn=$fn);
			translate([-1.270,4.128]) circle(r=0.503,$fn=$fn);
			translate([13.970,20.320]) circle(r=0.503,$fn=$fn);
			translate([32.068,20.637]) circle(r=0.503,$fn=$fn);
			translate([47.308,13.652]) circle(r=0.503,$fn=$fn);
		}
					if (EnableVias && (Detailgrad > 12)) 
 					union() // Vias 
					{
				translate([31.433,-2.223]) circle(r=0.175,$fn=$fn);
				translate([13.970,3.175]) circle(r=0.300,$fn=$fn);
				translate([17.780,3.493]) circle(r=0.300,$fn=$fn);
				translate([55.880,22.225]) circle(r=0.300,$fn=$fn);
				translate([4.763,14.605]) circle(r=0.300,$fn=$fn);
				translate([4.763,16.192]) circle(r=0.300,$fn=$fn);
				translate([26.035,13.970]) circle(r=0.300,$fn=$fn);
				translate([22.860,13.970]) circle(r=0.300,$fn=$fn);
				translate([13.018,10.795]) circle(r=0.300,$fn=$fn);
				translate([16.828,9.843]) circle(r=0.300,$fn=$fn);
				translate([-1.588,-1.588]) circle(r=0.300,$fn=$fn);
				translate([-1.270,8.890]) circle(r=0.300,$fn=$fn);
				translate([-1.270,4.128]) circle(r=0.300,$fn=$fn);
				translate([13.970,20.320]) circle(r=0.300,$fn=$fn);
				translate([32.068,20.637]) circle(r=0.300,$fn=$fn);
				translate([47.308,13.652]) circle(r=0.300,$fn=$fn);

			}

		}
			if (EnablePolygones) {
			}
		if(EnableParts) union() // parts 
		{
			translate([2.540,13.652,board_thickness])rotate([0,0,90])C1206(Name="C1",Value="",Library="rcl"); 
			translate([18.733,12.065,board_thickness])rotate([0,0,270])C1206(Name="C2",Value="",Library="rcl"); 
			translate([24.448,11.113,board_thickness])rotate([0,0,270])PANASONIC_D(Name="C12",Value="100uF",Library="rcl"); 
			translate([12.383,-2.223,0])rotate([180,0,0])DO41_7_6(Name="D1",Value="1N5819-T",Library="diode"); 
			translate([15.558,12.065,board_thickness])rotate([0,0,270])SOT353(Name="IC1",Value="74HC1G08GW",Library="Logik-IC"); 
			translate([-1.270,14.288,board_thickness])rotate([0,0,270])TSOP38(Name="IC2",Value="",Library="modules"); 
			translate([22.860,17.463,board_thickness])rotate([0,0,180])SJ_2(Name="SJ1",Value="",Library="jumper"); 
			translate([25.082,-2.223,0])rotate([180,0,0])SJ_2(Name="SJ2",Value="",Library="jumper"); 
			translate([45.720,10.160,board_thickness])rotate([0,0,90])WEMOS_D1_MINI(Name="U$1",Value="WEMOS-D1-MINI",Library="diy-modules"); 
			translate([21.908,10.160,0])rotate([180,0,0])DC_DC_STEP_DOWN_LM2596(Name="U$2",Value="DC-DC-STEP-DOWN-LM2596",Library="diy-modules"); 
			translate([51.117,10.795,0])rotate([180,0,180])PAD2X4(Name="X5",Value="",Library="modules"); 
			translate([51.117,13.652,0])rotate([180,0,180])PAD2X4(Name="X6",Value="",Library="modules"); 
			translate([51.117,16.510,0])rotate([180,0,180])PAD2X4(Name="X7",Value="",Library="modules"); 
			translate([59.055,10.795,0])rotate([180,0,180])PAD2X4(Name="X8",Value="",Library="modules"); 
			translate([59.055,16.510,0])rotate([180,0,180])PAD2X4(Name="X10",Value="",Library="modules"); 
			translate([59.055,23.178,0])rotate([180,0,180])PAD2X4(Name="X11",Value="",Library="modules"); 
			translate([59.055,19.685,0])rotate([180,0,180])PAD2X4(Name="X12",Value="",Library="modules"); 
			translate([10.478,16.192,board_thickness])rotate([0,0,90])PAD2X4(Name="X13",Value="",Library="modules"); 
			translate([7.620,16.192,board_thickness])rotate([0,0,90])PAD2X4(Name="X14",Value="",Library="modules"); 
		} //endunion() 
	} // // PCB whith parts and text  
	module C1206(Name="",Value="",Library="rcl")
	{
		// X1=-0.983, Y1=-2.473, X2=0.983, Y2=2.473, Ex=2.540, Ey=13.652, a=90
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			rotate([0,0,270]) translate([-0.983,-2.473,0]) linear_extrude(10) square([1.966,4.946]); //Dummy Package
		}
	}
	module PANASONIC_D(Name="",Value="",Library="rcl")
	{
		// X1=-3.250, Y1=-3.250, X2=3.250, Y2=3.250, Ex=24.448, Ey=11.113, a=270
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			rotate([0,0,90]) translate([-3.250,-3.250,0]) linear_extrude(10) square([6.500,6.500]); //Dummy Package
		}
	}
	module DO41_7_6(Name="",Value="",Library="diode")
	{
		// X1=-3.810, Y1=-0.920, X2=3.810, Y2=0.920, Ex=12.383, Ey=-2.223, a=
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			rotate([0,0,180]) translate([-3.810,-0.920,0]) linear_extrude(10) square([7.620,1.840]); //Dummy Package
		}
	}
	module SOT353(Name="",Value="",Library="Logik-IC")
	{
		// X1=-0.550, Y1=-1.000, X2=0.550, Y2=1.000, Ex=15.558, Ey=12.065, a=270
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			rotate([0,0,90]) translate([-0.550,-1.000,0]) linear_extrude(10) square([1.100,2.000]); //Dummy Package
		}
	}
	module TSOP38(Name="",Value="",Library="modules")
	{
		// X1=-3.300, Y1=-2.500, X2=1.500, Y2=2.500, Ex=-1.270, Ey=14.288, a=270
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			rotate([0,0,90]) translate([-3.300,-2.500,0]) linear_extrude(10) square([4.800,5.000]); //Dummy Package
		}
	}
	module SJ_2(Name="",Value="",Library="jumper")
	{
		// X1=-2.413, Y1=-1.016, X2=2.413, Y2=1.016, Ex=22.860, Ey=17.463, a=180
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			rotate([0,0,180]) translate([-2.413,-1.016,0]) linear_extrude(10) square([4.826,2.032]); //Dummy Package
		}
	}
	module WEMOS_D1_MINI(Name="",Value="",Library="diy-modules")
	{
		// X1=-17.399, Y1=-12.700, X2=17.145, Y2=12.700, Ex=45.720, Ey=10.160, a=90
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			rotate([0,0,270]) translate([-17.399,-12.700,0]) linear_extrude(10) square([34.544,25.400]); //Dummy Package
		}
	}
	module DC_DC_STEP_DOWN_LM2596(Name="",Value="",Library="diy-modules")
	{
		// X1=-21.590, Y1=-10.414, X2=21.590, Y2=10.414, Ex=21.908, Ey=10.160, a=
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			rotate([0,0,180]) translate([-21.590,-10.414,0]) linear_extrude(10) square([43.180,20.828]); //Dummy Package
		}
	}
	module PAD2X4(Name="",Value="",Library="modules")
	{
		// X1=6659.769, Y1=6700.091, X2=6659.769, Y2=6700.091, Ex=51.117, Ey=10.795, a=180
		InvisiblePart(); //No Dimension
	}


	include <packages.scad>;

} // end module

module InvisiblePart() { rotate([0,0,0]);}

 module EagleWire(start,end,width=0.4,poly=true,startdot=true,enddot=true,$fn=9) // hull() n.a. in FreeCAD
{
 	function bogen(point=[0,0], r = 1 ,phase = 0, winkel = 90, $fn=$fn) = [let(num=abs($fn*winkel/360)) for (i=[0:num], x=i*winkel/num) [point[0]+r*cos(x+phase),point[1]+r*sin(x+phase)]]; 
	function winkel(a,b=[0,0]) = atan2(a[1]-b[1],a[0]-b[0]);
	if (poly)
	{
		fns = (startdot) ? $fn : 2;
		fne = (enddot) ? $fn : 2;
		polygon(concat(bogen(point=start, r=width/2 ,phase = winkel(start,end)-90, winkel = 180, $fn=fns), bogen(point=end, r=width/2 ,phase = winkel(end,start)-90, winkel = 180, $fn=fne)));
	}
	else
	{
		length = sqrt(pow(start[0]-end[0],2)+pow(start[1]-end[1],2));
		if (startdot) {translate(start) circle(width/2,$fn=$fn);}
		if (length > 0)
		{
			if (enddot) {translate(end) circle(width/2,$fn=$fn);}
			translate(end) rotate([0,0,winkel(start,end)]) translate([0,-width/2]) square([length , width]);
		}
	}
}

module EaglePad(size,roundness,$fn=$fn) 
{
 	function bogen(point=[0,0], r = 1 ,phase = 0, winkel = 90, $fn=$fn) = [let(num=abs($fn*winkel/360)) for (i=[0:num], x=i*winkel/num) [point[0]+r*cos(x+phase),point[1]+r*sin(x+phase)]]; 
	r = ((size[0] < size[1]) ? size[0] / 2: size[1] / 2) * roundness / 100;
	dim = [size[0] / 2 - r, size[1] / 2 - r];
	if ((size[0] == size[1]) && (roundness == 100))
	{
		circle(r);
	}
	else
	{
		polygon(concat(bogen(point=[-dim[0],-dim[1]], r = r, phase = 180, $fn=$fn ), bogen(point=[dim[0],-dim[1]], r = r, phase = 270, $fn=$fn ), bogen(point=[dim[0],dim[1]], r = r, phase = 0, $fn=$fn ), bogen(point=[-dim[0],dim[1]], r = r, phase = 90, $fn=$fn )));
	}
}
ESPLEDCTRL(); //Show module
//Created by generate-scad.ulp version 1.6
